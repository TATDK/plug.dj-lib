var Service = Class.extend({
    init: function() {},
    execute: function() {},
    parse: function() {},
    onResult: function(a) {},
    onFault: function(a) {},
    onStatusError: function(a) {},
    onServerError: function(a) {},
    cleanup: function() {}
}),
DurationMismatchService = Service.extend({
    init: function() {},
    execute: function() {},
    parse: function(a) {}
}),
DurationUpdateService = Service.extend({
    init: function(a,b,c) {},
    execute: function() {},
    parse: function(a) {}
}),
HistorySelectService = Service.extend({
    init: function() {},
    execute: function() {},
    parse: function(a) {}
}),
APIDispatcher = EventDispatcher.extend({
    init: function() {},
    getUsers: function() {},
    getUser: function(a) {},
    getSelf: function() {},
    getAudience: function() {},
    getDJs: function() {},
    getStaff: function() {},
    getAdmins: function() {},
    getAmbassadors: function() {},
    getHost: function() {},
    getMedia: function() {},
    getWaitList: function() {},
    getRoomScore: function() {},
    sendChat: function(a) {},
    waitListJoin: function() {},
    waitListLeave: function() {},
    moderateForceSkip: function() {},
    moderateAddDJ: function(a) {},
    moderateRemoveDJ: function(a) {},
    moderateKickUser: function(a,b) {},
    moderateBanUser: function(a,b) {},
    moderateDeleteChat: function(a) {},
    moderateSetRole: function(a,b) {},
    delayDispatch: function(a,b) {}
}),
GAETransactionManager = Class.extend({
    init: function() {},
    reset: function() {},
    add: function(a) {},
    addToQueue: function(a) {},
    onTimeoutComplete: function() {},
    onTransactionComplete: function() {}
}),
WindowMessageListener = Class.extend({
    init: function() {},
    rx: function(a) {},
    ytx: function(a) {}
}),
socket, Socket = Class.extend({
    init: function(a) {},
    send: function(a) {},
    open: function() {},
    close: function(a) {},
    execute: function(a,b) {},
    pong: function() {},
    chat: function(a) {},
    message: function(a) {},
    socketLog: function(a,b) {}
});

function socketConnect(a) {}
function socketInit(a) {}
var SocketMessageListener = Class.extend({
    init: function() {},
    chat: function(a) {},
    skip: function(a) {},
    userJoin: function(a) {},
    userLeave: function(a) {},
    userUpdate: function(a) {},
    userCounterUpdate: function(a) {},
    userFollow: function(a) {},
    followJoin: function(a) {},
    voteUpdate: function(a) {},
    voteUpdateMulti: function(a) {},
    curateUpdate: function(a) {},
    djAdvance: function(a) {},
    djUpdate: function(a) {},
    waitListUpdate: function(a) {},
    roomPropsUpdate: function(a) {},
    roomMetaUpdate: function(a) {},
    roomVoteSkip: function() {},
    modSkip: function(a) {},
    modKick: function(a) {},
    modBan: function(a) {},
    modAddDJ: function(a) {},
    modRemoveDJ: function(a) {},
    modAddWaitList: function(a) {},
    modRemoveWaitList: function(a) {},
    modStaff: function(a) {},
    playlistCycle: function(a) {},
    djTrigger: function(a) {},
    requestDuration: function(a) {},
    requestDurationRetry: function() {},
    durationUpdate: function(a) {},
    ping: function() {},
    pdjUpdate: function() {},
    pdjMessage: function(a) {},
    lotteryWinner: function(a) {},
    kick: function(a) {},
    chatDelete: function(a) {}
}),
LSDatabase = Class.extend({
    init: function() {},
    reset: function() {},
    ready: function(a) {},
    saveSettings: function() {}
}),
LSLocalStore = Class.extend({
    init: function() {},
    getMediaPlaylists: function(a) {}
}),
LSMediaStore = Class.extend({
    init: function() {},
    modified: function() {},
    write: function(a) {},
    remove: function(a) {},
    lookup: function(a) {},
    select: function(a) {},
    exists: function(a) {},
    updateDuration: function(a,b) {}
}),
LSLastModStore = Class.extend({
    init: function() {},
    write: function(a) {},
    read: function(a) {},
    remove: function(a) {}
}),
LSPlaylistStore = Class.extend({
    init: function() {},
    modified: function() {},
    write: function(a) {},
    update: function(a) {},
    exists: function(a) {},
    selected: function() {},
    firstMedia: function(a) {},
    deletePlaylistMedia: function(a,b) {},
    deleteAllPlaylistMedia: function(a) {},
    checkPermaDelete: function(a) {}
}),
LSPlaylistMediaStoreRead = Class.extend({
    init: function(a) {},
    load: function() {},
    filter: function(a) {},
    lookup: function(a) {}
}),
LSPlaylistStoreRead = Class.extend({
    init: function() {},
    load: function() {},
    nameSort: function(a,b) {}
}),
LSMediaSearchStoreRead = Class.extend({
    load: function(a) {},
    playlistSort: function(a,b) {}
}),
WaitListJoinService = Service.extend({
    init: function() {},
    execute: function() {},
    parse: function(a) {}
}),
WaitListLeaveService = Service.extend({
    init: function() {},
    execute: function() {},
    parse: function(a) {}
}),
SoundCloudSearchService = Class.extend({
    init: function() {},
    load: function(a,b,c,d) {},
    onComplete: function(a) {},
    onError: function() {}
}),
SoundCloudFavoritesService = Class.extend({
    init: function() {},
    load: function(a,b,c) {},
    auth: function(a,b) {},
    onComplete: function(a) {},
    onError: function() {}
}),
SoundCloudTracksService = Class.extend({
    init: function() {},
    load: function(a,b,c) {},
    auth: function(a,b) {},
    onComplete: function(a) {},
    onError: function() {}
}),
SoundCloudSetsService = Class.extend({
    init: function() {},
    load: function(a,b,c) {},
    auth: function(a,b) {},
    onComplete: function(a) {},
    onError: function() {}
}),
PlaylistServiceFacade = Class.extend({
    init: function() {},
    sync: function() {},
    onSyncError: function() {},
    create: function(a,b,c,d) {},
    remove: function(a) {},
    rename: function(a,b) {},
    activate: function(a) {},
    onSelectResponse: function(a) {},
    onArrayResponse: function(a) {},
    onItemResponse: function(a) {},
    onCreateInsertResponse: function(a) {},
    onDelete: function(a) {},
    onServiceError: function() {}
}),
MediaServiceFacade = Class.extend({
    init: function() {},
    sync: function() {},
    onSelectResponse: function(a) {},
    onServiceError: function() {}
}),
PlaylistMediaServiceFacade = Class.extend({
    init: function(a) {},
    mediaInsert: function(a,b,c) {},
    mediaDelete: function(a) {},
    mediaUpdate: function(a) {},
    mediaMove: function(a,b) {},
    onInsertResponse: function(a) {},
    onDeleteResponse: function(a) {},
    onMoveResponse: function(a) {},
    onUpdateResponse: function(a) {},
    onServiceError: function() {}
}),
DJJoinService = Service.extend({
    init: function() {},
    execute: function() {},
    parse: function(a) {}
}),
DJLeaveService = Service.extend({
    init: function() {},
    execute: function() {},
    parse: function(a) {}
}),
DJSkipService = Service.extend({
    init: function() {},
    execute: function() {},
    parse: function(a) {}
}),
DJCurateService = Service.extend({
    init: function(a) {},
    execute: function() {},
    parse: function(a) {}
}),
DJReplaceRestrictedMediaService = Service.extend({
    init: function(a,b) {},
    execute: function() {},
    parse: function(a) {}
}),
SearchServiceFacade = Class.extend({
    init: function() {},
    ytSearch: function(a,b,c,d) {},
    ytRelated: function(a,b) {},
    ytPlaylist: function(a,b) {},
    ytPlaylistVideos: function(a,b) {},
    ytFavoriteVideos: function(a,b) {},
    scSearch: function(a,b,c,d) {},
    scFavorites: function(a,b,c) {},
    scTracks: function(a,b,c) {},
    scSets: function(a,b,c) {},
    cidSearch: function(a,b) {}
}),
CIDSearchService = Class.extend({
    init: function() {},
    load: function(a,b) {},
    onComplete: function(a) {},
    onError: function() {}
}),
RoomSelectService = Service.extend({
    init: function(a,b) {},
    execute: function() {},
    parse: function(a) {}
}),
RoomCreateService = Service.extend({
    init: function(a,b) {},
    execute: function() {},
    parse: function(a) {}
}),
RoomUpdateService = Service.extend({
    init: function(a,b,c) {},
    execute: function() {},
    parse: function(a) {}
}),
RoomPropsService = Service.extend({
    init: function(a,b,c,d) {},
    execute: function() {},
    parse: function(a) {}
}),
RoomVoteService = Service.extend({
    init: function(a,b) {},
    execute: function() {},
    parse: function(a) {}
}),
RoomJoinService = Service.extend({
    init: function(a) {},
    execute: function() {},
    parse: function(a) {}
}),
RoomStateService = Service.extend({
    init: function() {},
    execute: function() {},
    parse: function(a) {}
}),
YouTubeSearchService = Class.extend({
    init: function() {},
    load: function(a,b,c,d) {},
    onComplete: function(a) {},
    deserialize: function(a,b) {},
    onError: function(a,b) {}
}),
YouTubeImportService = Class.extend({
    init: function() {},
    load: function(a,b,c) {},
    next: function() {},
    getURL: function() {},
    onComplete: function(a) {},
    deserialize: function(a) {},
    eliminateDuplicates: function() {},
    onError: function(a,b) {}
}),
YouTubePlaylistService = Class.extend({
    init: function() {},
    load: function(a,b) {},
    next: function() {},
    onComplete: function(a) {},
    sortByName: function(a,b) {},
    deserialize: function(a) {},
    onError: function(a,b) {}
}),
YouTubeSuggestService = Class.extend({
    init: function() {},
    load: function(a) {},
    onComplete: function(a) {},
    onError: function(a,b) {}
}),
MediaSelectService = Service.extend({
    init: function(a) {},
    execute: function() {},
    parse: function(a) {}
}),
MediaUpdateService = Service.extend({
    init: function(a) {},
    execute: function() {},
    parse: function(a) {}
}),
PlaylistMediaInsertService = Service.extend({
    init: function(a,b,c,d) {},
    execute: function() {},
    parse: function(a) {}
}),
PlaylistMediaDeleteService = Service.extend({
    init: function(a,b) {},
    execute: function() {},
    parse: function(a) {}
}),
PlaylistMediaMoveService = Service.extend({
    init: function(a,b,c) {},
    execute: function() {},
    parse: function(a) {}
}),
SearchMediaCIDService = Service.extend({
    init: function(a) {},
    execute: function() {},
    parse: function(a) {}
}),
PlaylistSelectService = Service.extend({
    init: function(a) {},
    execute: function() {},
    parse: function(a) {}
}),
PlaylistInsertService = Service.extend({
    init: function(a) {},
    execute: function() {},
    parse: function(a) {}
}),
PlaylistDeleteService = Service.extend({
    init: function(a) {},
    execute: function() {},
    parse: function(a) {}
}),
PlaylistRenameService = Service.extend({
    init: function(a,b) {},
    execute: function() {},
    parse: function(a) {}
}),
PlaylistActivateService = Service.extend({
    init: function(a) {},
    execute: function() {},
    parse: function(a) {}
}),
ModerationForceSkipService = Service.extend({
    init: function(a) {},
    execute: function() {},
    parse: function(a) {}
}),
ModerationKickUserService = Service.extend({
    init: function(a,b,c) {},
    execute: function() {},
    parse: function(a) {}
}),
ModerationAddDJService = Service.extend({
    init: function(a) {},
    execute: function() {},
    parse: function(a) {}
}),
ModerationRemoveDJService = Service.extend({
    init: function(a) {},
    execute: function() {},
    parse: function(a) {}
}),
ModerationWaitListRemoveService = Service.extend({
    init: function(a) {},
    execute: function() {},
    parse: function(a) {}
}),
ModerationPermissionsService = Service.extend({
    init: function(a,b) {},
    execute: function() {},
    parse: function(a) {}
}),
ModerationBoothCleanupService = Service.extend({
    init: function() {},
    execute: function() {},
    parse: function(a) {}
}),
ModerationChatDeleteService = Service.extend({
    init: function(a) {},
    execute: function() {},
    parse: function(a) {}
}),
UserChangeDisplayNameService = Service.extend({
    init: function(a) {},
    execute: function() {},
    parse: function(a) {}
}),
UserChangeAvatarService = Service.extend({
    init: function(a) {},
    execute: function() {},
    parse: function(a) {}
}),
UserLanguageUpdateService = Service.extend({
    init: function(a) {},
    execute: function() {},
    parse: function(a) {}
}),
UserFanService = Service.extend({
    init: function(a,b) {},
    execute: function() {},
    parse: function(a) {}
}),
UserDisplayNameAvailableService = Service.extend({
    init: function(a) {},
    execute: function() {},
    parse: function(a) {}
}),
UserStatusUpdateService = Service.extend({
    init: function(a) {},
    execute: function() {},
    parse: function(a) {}
}),
UserGetByIdsService = Service.extend({
    init: function(a,b) {},
    execute: function() {},
    parse: function(a) {}
}),
ChatModel = EventDispatcher.extend({
    init: function() {},
    ready: function() {},
    clear: function() {},
    toggleChatSound: function() {},
    onChatSoundUpdate: function() {},
    sendChat: function(a) {},
    receive: function(a) {},
    onChatReceived: function(a) {},
    parse: function(a,b) {},
    deleteChat: function(a) {},
    onChatDelete: function(a) {},
    chatCommand: function(a) {},
    initChatLanguages: function() {},
    sortLanguages: function(a,b) {}
}),
PlaylistModel = Class.extend({
    init: function() {},
    sync: function() {},
    read: function() {},
    onSyncComplete: function() {},
    onStoreRead: function(a) {},
    getByID: function(a) {},
    getSelected: function() {}
}),
SoundCloudPlaylistModel = Class.extend({
    init: function() {},
    load: function() {},
    onComplete: function(a) {},
    importSelected: function() {},
    "import": function() {},
    createPlaylist: function(a,b,c) {},
    importSelectedAlert: function() {},
    importAllAlert: function() {}
}),
PlaylistMediaModel = Class.extend({
    init: function(a) {},
    mediaUpdate: function(a,b,c) {},
    mediaMove: function(a,b) {},
    mediaMoveToTop: function(a,b) {},
    load: function(a) {},
    read: function() {},
    mediaDelete: function(a) {},
    mediaInsert: function(a,b,c) {},
    lookup: function(a) {},
    onStoreRead: function(a) {},
    onStoreLookup: function() {},
    onActionComplete: function() {},
    destroy: function() {}
}),
YouTubePlaylistModel = Class.extend({
    init: function() {},
    load: function(a) {},
    onComplete: function(a) {},
    "import": function() {},
    importNextPlaylist: function() {},
    onImportMediaComplete: function(a) {},
    createPlaylist: function(a,b) {},
    importAlert: function() {}
}),
YouTubePlaylistMediaModel = Class.extend({
    init: function() {},
    load: function(a) {},
    onComplete: function(a) {},
    appendUnknown: function() {},
    "import": function() {},
    createPlaylist: function(a,b) {},
    onCIDResult: function(a) {}
}),
ModelRef = Class.extend({
    init: function() {},
    playlistMedia: function(a) {}
}),
HistoryModel = Class.extend({
    init: function() {},
    reset: function() {},
    load: function() {},
    filter: function(a) {},
    djAdvance: function(a) {},
    roomScore: function(a) {},
    onSuccess: function(a) {},
    onError: function() {}
}),
SearchModel = Class.extend({
    init: function() {},
    reset: function() {},
    load: function(a,b,c) {},
    loadYTRelated: function(a) {},
    loadSCFavorites: function(a) {},
    loadSCTracks: function(a) {},
    initCounts: function(a) {},
    updateCounts: function() {},
    setPagination: function(a) {},
    onNextPage: function() {},
    onPrevPage: function() {},
    onYTResult: function(a) {},
    onSCResult: function(a) {},
    eliminateDuplicates: function() {},
    onCIDResult: function(a) {},
    ignoreDuplicatesAndLocal: function(a) {},
    collate: function() {},
    appendUnknown: function(a) {}
}),
RestrictedSearchModel = SearchModel.extend({
    initCounts: function() {},
    updateCounts: function() {},
    setPagination: function() {},
    appendUnknown: function(a) {}
}),
iTunesModel = Class.extend({
    load: function(a) {},
    parse: function(a) {},
    parsePlaylists: function(a) {},
    parseLibrary: function(a) {}
}),
UserModel = Class.extend({
    init: function() {},
    setData: function(a) {},
    addFollower: function(a) {},
    addFollowing: function(a) {},
    removeFollowing: function(a) {},
    addFriend: function(a) {},
    changeDisplayName: function(a) {},
    changeLanguage: function(a) {},
    changeAvatar: function(a) {},
    changeStatus: function(a) {},
    onLanguageUpdateSuccess: function(a) {},
    getPermission: function() {},
    hasPermission: function(a) {},
    getUILanguage: function() {},
    onChangeDisplayNameSuccess: function(a) {},
    onChangeDisplayNameError: function(a) {},
    onChangeAvatarSuccess: function(a) {}
}),
RoomModel = EventDispatcher.extend({
    init: function() {},
    clear: function() {},
    setData: function(a) {},
    updateChatRateLimit: function() {},
    setState: function(a) {},
    addAudience: function() {},
    updateState: function(a) {},
    setBoothState: function(a) {},
    updateProps: function() {},
    updateRelationships: function() {},
    updatePriorities: function() {},
    updatePermissions: function() {},
    editStaff: function(a,b) {},
    checkStaffAvatars: function() {},
    getAudience: function(a) {},
    sortAudienceRelationship: function(a,b) {},
    sortAudienceAlpha: function(a,b) {},
    sortStaff: function(a,b) {},
    getDJs: function() {},
    getUsers: function() {},
    getRoomUsersSorted: function() {},
    getStaff: function() {},
    getAmbassadors: function() {},
    getSuperUsers: function() {},
    getHost: function() {},
    getUserByID: function(a) {},
    getWaitList: function() {},
    getWaitListPosition: function(a) {},
    getDJPlays: function(a) {},
    buildDJHash: function() {},
    checkCurrentDJ: function() {},
    getUsername: function(a) {},
    userJoin: function(a) {},
    userLeave: function(a) {},
    userUpdate: function(a) {},
    userCounterUpdate: function(a) {},
    updateEarnedUserMeta: function() {},
    voteUpdate: function(a) {},
    curateUpdate: function(a) {},
    roomPropsUpdate: function(a) {},
    roomMetaUpdate: function(a) {},
    djAdvance: function(a) {},
    djUpdate: function(a) {},
    updateRoomScore: function() {},
    updateEarnedPoints: function() {},
    applyEarnedPoints: function(a) {},
    waitListUpdate: function(a) {},
    playMedia: function() {},
    addUsernameLookup: function(a) {},
    removeUsernameLookup: function(a) {},
    mentionLookup: function(a) {}
}),
LobbyOverlayView = Class.extend({
    init: function() {},
    ready: function() {},
    show: function() {},
    onKeyUp: function(a,b) {},
    onSubmitSearch: function() {},
    load: function(a,b) {},
    spin: function(a) {},
    onRoomSelectResponse: function(a) {},
    posLobbyLabels: function() {},
    onScroll: function() {},
    onRoomSelectError: function() {},
    onRoomOver: function() {},
    onRoomOut: function() {},
    onRoomClick: function(a) {},
    onCreateRoomClick: function() {}
}),
AvatarOverlayView = Class.extend({
    init: function() {},
    onAvatarSetClick: function(a) {},
    show: function() {},
    draw: function() {},
    drawRow: function(a,b,c) {},
    onAvatarClick: function(a) {},
    onAvatarOver: function(a) {},
    onAvatarOut: function(a) {},
    animateAvatar: function() {},
    setSelectedAvatar: function(a) {},
    initAvatars: function() {},
    getOriginalSet: function() {},
    getFestivalSet: function() {}
}),
AvatarRollover = Class.extend({
    init: function() {},
    showSimple: function(a,b,c) {},
    showChat: function(a,b,c) {},
    showInfo: function(a) {},
    getButton: function(a,b) {},
    onButtonClick: function(a) {},
    onAction: function(a) {},
    hide: function(a) {},
    onAvatarClick: function() {}
}),
UserListOverlayView = Class.extend({
    init: function() {},
    show: function(a) {},
    hide: function() {},
    updateUsers: function() {},
    updateWaitList: function() {},
    updateWaitListButton: function() {},
    waitListServiceComplete: function(a) {},
    onWaitListJoinClick: function(a) {},
    onWaitListLeaveClick: function() {},
    showWaitListSpinner: function() {},
    posRemoveSpan: function() {}
});
UserListView = Class.extend({
    init: function() {},
    setData: function(a,b) {},
    onUserClick: function(a) {},
    onWaitListRemoveClick: function(a) {}
});
var RoomView = Class.extend({
    init: function() {},
    ready: function() {},
    setRoomMeta: function(a) {},
    onMediaUpdate: function(a) {},
    setUserMeta: function(a,b,c) {},
    setQueueMeta: function(a) {},
    onScoreUpdate: function(a) {},
    setUserAvatar: function(a) {},
    onAddThisClick: function() {},
    onSkipClick: function() {},
    setSkipping: function() {},
    onLobbyClick: function() {},
    onMediaClick: function() {},
    onPlayClick: function() {},
    onWaitListViewClick: function() {},
    onWaitListJoinClick: function(a) {},
    onWaitListLeaveClick: function(a) {},
    onWaitListLeaveConfirm: function() {},
    onQuitClick: function() {},
    onQuitConfirm: function() {},
    onUsernameEnter: function() {},
    onUsernameLeave: function() {},
    onUsernameEditClick: function() {},
    onUserAvatarClick: function() {},
    setUserName: function(a) {},
    posUserName: function(a,b,c) {},
    setDJName: function(a) {},
    updateUserPlaying: function() {},
    updateDJButton: function() {},
    showDJPlayButton: function(a) {},
    showDJQuitButton: function(a) {},
    showWaitListJoinButton: function() {},
    showWaitListLeaveButton: function() {},
    showWaitListViewButton: function() {},
    showLockButton: function() {},
    hideDJButtons: function() {},
    hideWaitListViewButton: function() {},
    onQueueClick: function() {},
    onRoomInfoClick: function() {},
    onRoomUsersClick: function() {},
    onRoomHistoryClick: function() {},
    onTwitterClick: function() {},
    onFacebookClick: function() {},
    openPopup: function(a,b,c,d) {}
}),
RoomUserView = Class.extend({
    init: function() {},
    ready: function() {},
    posRolloverLabel: function() {},
    testAddAvatar: function(a) {},
    clear: function() {},
    setAudience: function(a) {},
    setAudienceNext: function() {},
    setDJs: function(a) {},
    redraw: function() {},
    animateAvatars: function() {},
    userJoin: function(a) {},
    userUpdate: function(a) {},
    userLeave: function(a) {},
    onVoteUpdate: function(a) {},
    enableVoteButtons: function() {},
    updateVoteButtons: function() {},
    onButtonVoteNegativeClick: function(a) {},
    onButtonVotePositiveClick: function(a) {}
}),
reqAnimFrame, tickStart,animIntervalID, animSpeed = 83;

function avatarTick(a) {}
function startAnimation() {}
var MediaOverlayView = Class.extend({
    init: function() {},
    ready: function() {},
    onMediaSynced: function() {},
    onFirstPlaylistUpdate: function(a) {},
    show: function() {},
    showHelp: function() {},
    showImport: function() {},
    posImportLabels: function() {},
    showHistory: function() {},
    display: function() {},
    onRoomHistoryClick: function() {},
    onPlaylistCreateClick: function() {},
    onPlaylistRelease: function(a) {},
    onPlaylistMediaUpdate: function(a,b) {},
    onSearchUpdate: function(a) {},
    onHistoryUpdate: function(a) {},
    onUpdateTimeRemaining: function(a) {},
    onYouTubePlaylistsUpdate: function(a) {},
    onImportPlaylistMediaUpdate: function(a) {},
    onSoundCloudPlaylistsUpdate: function(a) {},
    onPlaylistUpdate: function(a) {},
    onPlaylistDelete: function(a) {},
    onPlaylistOver: function(a) {},
    onPlaylistOut: function(a) {},
    onPlaylistActivateClick: function(a) {},
    onPlaylistActionsActivateClick: function() {},
    onPlaylistActionsEditClick: function() {},
    onPlaylistActionsDeleteClick: function() {},
    updateUserPlaying: function() {},
    updateQueueMeta: function(a) {},
    onOverlayCloseClick: function() {},
    menuSelect: function(a) {},
    onRelatedBackButtonClick: function() {},
    showPlaylist: function(a,b,c) {},
    showNowPlayingRelated: function() {},
    onMediaDelete: function() {},
    onSearch: function(a,b) {},
    onYouTubeImport: function(a) {},
    onYouTubeImportMedia: function(a) {},
    onPlaylistImportButtonClick: function() {},
    onSoundCloudImport: function(a) {},
    onSoundCloudSetsImport: function() {},
    onSoundCloudSetSelect: function(a) {},
    onFilter: function(a) {},
    onSearchLocal: function(a) {},
    onLocalPlayNext: function(a) {},
    setPanelTitle: function(a,b,c,d) {},
    updateTitle: function(a) {},
    showLoadProgress: function() {},
    hideLoadProgress: function() {},
    showPlaylistCreateProgress: function() {},
    hidePlaylistCreateProgress: function() {},
    showPlaylistProgress: function(a) {},
    hidePlaylistProgress: function() {},
    showRoomProgress: function() {},
    positionRoomProgress: function() {},
    hideRoomProgress: function() {},
    onDocumentKeyDown: function(a) {},
    onDocumentKeyUp: function(a) {}
}),
PlaybackView = Class.extend({
    init: function() {},
    ready: function() {},
    initSC: function() {},
    onVolumeSliderStart: function() {},
    onVolumeSliderUpdate: function(a) {},
    onVolumeSliderStop: function() {},
    onPopupVolumeUpdate: function(a) {},
    play: function(a,b,c) {},
    durationUpdate: function(a,b) {},
    reset: function() {},
    resetIgnoreComplete: function() {},
    stop: function() {},
    onPlaybackEnter: function() {},
    onPlaybackLeave: function() {},
    onRefreshClick: function() {},
    onHDOnClick: function() {},
    onHDOffClick: function() {},
    setHD: function(a) {},
    onSCLoading: function() {},
    onSCTimeout: function(a) {},
    playbackComplete: function() {},
    setPlayer: function(a) {},
    updateTimeRemaining: function() {},
    durationCheck: function(a) {},
    setVolume: function(a) {},
    onSoundButtonClick: function() {},
    onYTPlayerError: function(a) {},
    previewMute: function(a) {},
    fadeToMute: function() {},
    fadeFromMute: function() {},
    onYTFrameLoaded: function() {}
}),
MediaListView = Class.extend({
    init: function() {},
    setData: function(a) {},
    draw: function() {},
    update: function() {},
    getList: function() {},
    getRow: function() {},
    onCellPress: function(a) {},
    onCellRelease: function(a) {},
    onDocumentRelease: function() {},
    doubleClickCell: function(a) {},
    onPreviewItem: function() {},
    onCheckThreshold: function(a) {},
    selectSingleCell: function(a) {},
    selectMultipleCells: function(a,b) {},
    selectAll: function() {},
    selectNone: function() {},
    toggleCell: function(a) {},
    getSelectedCells: function() {},
    sortSelectedCells: function(a,b) {},
    resetDrag: function() {},
    onCellOver: function(a) {},
    startDrag: function() {},
    jumpToIndex: function(a) {},
    onMousePosition: function(a) {},
    onDragUpdate: function() {},
    onCheckListScroll: function(a) {},
    onCellOut: function(a) {},
    onEditClick: function(a) {},
    onMoveToTopClick: function(a) {},
    onDeleteClick: function(a) {},
    onAddClick: function(a) {},
    onRelatedClick: function(a) {}
}),
PlaylistMediaListView = MediaListView.extend({
    setData: function(a,b) {},
    updateTimeRemaining: function(a) {},
    getList: function() {},
    getRow: function(a,b) {},
    draw: function() {},
    startDrag: function(a) {},
    onDragUpdate: function(a) {},
    onCellRelease: function(a) {},
    onDocumentRelease: function() {},
    beforeMediaID: function() {},
    getCellsAreSequential: function(a) {},
    targetOutsideRange: function(a,b,c) {}
}),
SearchMediaListView = MediaListView.extend({
    getList: function() {},
    getRow: function(a,b) {},
    onCellOut: function(a) {},
    draw: function() {}
}),
SearchPlaylistsMediaListView = MediaListView.extend({
    getList: function() {},
    getRow: function(a,b) {},
    onPlayNextClick: function(a) {},
    onCellOut: function(a) {},
    draw: function() {}
}),
RestrictedSearchListView = MediaListView.extend({
    setData: function(a) {},
    draw: function() {},
    getList: function() {},
    getRow: function(a,b) {},
    onCellPress: function(a) {},
    onCellRelease: function(a) {},
    onCellOver: function(a) {},
    onCellOut: function(a) {}
}),
HistoryListView = MediaListView.extend({
    setData: function(a) {},
    refreshData: function() {},
    getList: function() {},
    getRow: function(a,b) {},
    onCellOut: function(a) {},
    onPreviewItem: function() {},
    onAddClick: function(a) {},
    onRelatedClick: function(a) {},
    getSelectedCells: function() {},
    getSelectedHistoryCells: function() {},
    draw: function() {}
}),
YouTubeImportPlaylistsView = Class.extend({
    init: function() {},
    setData: function(a) {},
    draw: function() {},
    getRow: function(a,b) {},
    onCellOver: function(a) {},
    onCellOut: function(a) {},
    onCellRelease: function(a) {}
}),
SoundCloudImportPlaylistsView = YouTubeImportPlaylistsView.extend({
    onCellRelease: function(a) {}
}),
GridData = Class.extend({
    init: function() {},
    clear: function() {},
    invalidateRoomElements: function() {},
    addZone: function(a,b) {},
    addUser: function(a) {},
    getHighestPriority: function() {},
    getPosition: function(a) {},
    removeUser: function(a) {},
    getZone: function(a) {},
    getZoneIDsForCellAt: function(a,b) {},
    getCellsInZone: function(a,b) {},
    getPriorityLevelForCellAt: function(a,b) {},
    invalidateCellAt: function(a,b) {},
    validateCellAt: function(a,b) {},
    invalidateCellsInBounds: function(a) {},
    decrementCellsInBounds: function(a) {},
    incrementCellsInBounds: function(a) {},
    decrementCellAt: function(a,b) {},
    incrementCellAt: function(a,b) {},
    setCellPriority: function(a,b,c) {},
    getAdjustment: function(a) {}
}),
DialogView = Class.extend({
    init: function() {},
    createPlaylist: function(a,b) {},
    submitCreatePlaylist: function() {},
    submitCreatePlaylistCurate: function() {},
    deletePlaylist: function(a) {},
    submitDeletePlaylist: function() {},
    renamePlaylist: function(a) {},
    submitRenamePlaylist: function() {},
    deleteMedia: function(a,b) {},
    submitDeleteMedia: function() {},
    editMedia: function(a,b) {},
    swapAuthorTitle: function() {},
    submitEditMedia: function() {},
    preview: function(a) {},
    onYTPreviewLoaded: function() {},
    restrictedMedia: function(a) {},
    onRestrictedSearchUpdate: function(a) {},
    submitRestrictedMedia: function() {},
    createRoom: function() {},
    onRoomChoiceOver: function(a) {},
    onRoomChoiceOut: function(a) {},
    onRoomChoiceClick: function(a) {},
    submitCreateRoom: function() {},
    roomInfo: function() {},
    submitRoomInfo: function() {},
    userProfile: function() {},
    submitUserProfile: function() {},
    alert: function(a,b,c,d) {},
    submitAlert: function() {},
    confirm: function(a,b,c) {},
    submitConfirm: function() {},
    moderateUser: function(a,b) {},
    submitModerateUser: function() {},
    userPermissions: function(a) {},
    getPermissionMenuItem: function(a,b,c,d) {},
    onUserPermissionClick: function(a) {},
    submitUserPermissions: function() {},
    importTT: function(a) {},
    submitImportTT: function() {},
    ttImportNext: function() {},
    onTTLookup: function(a) {},
    ttCreatePlaylist: function(a,b) {},
    youtubeImport: function() {},
    submitYouTubeImport: function() {},
    soundCloudImport: function() {},
    submitSoundCloudImport: function(a) {},
    itunesReading: function() {},
    itunesImport: function(a) {},
    submitImportiTunes: function() {},
    iTunesImportNextPlaylist: function() {},
    itunesImportNext: function() {},
    oniTunesLookup: function(a) {},
    itunesCreatePlaylist: function(a,b,c) {},
    showDialog: function(a) {},
    posDialogFields: function() {},
    closeDialog: function() {},
    getHeader: function(a) {},
    getCancelButton: function() {},
    getSubmitButton: function(a) {},
    getInputField: function(a,b,c,d,e,f) {},
    getTextArea: function(a,b,c,d,e,f) {},
    getCheckBox: function(a,b,c,d) {},
    getMenu: function(a,b,c,d,e) {},
    getLanguageMenu: function() {},
    getMessage: function(a) {},
    onKeyPressHandler: function(a) {},
    onInputFocus: function(a) {},
    onInputBlur: function(a) {},
    checkAvailability: function() {},
    onAvailabilityResponse: function(a) {},
    showAvailabilityProgress: function() {},
    hideAvailabilityProgress: function() {}
}),
PopMenuView = Class.extend({
    init: function() {},
    show: function(a,b) {},
    hide: function() {},
    onMenuClick: function(a) {},
    curateItem: function(a) {},
    onNonMenuClick: function(a) {},
    onMenuOut: function() {}
}),
Audience = Class.extend({
    init: function() {},
    createColorLookup: function() {},
    initRoomElements: function() {},
    defaultRoomElements: function() {},
    onMouseMove: function(a) {},
    setRenderMode: function(a) {},
    onImageLoaded: function() {},
    clear: function(a) {},
    refresh: function() {},
    draw: function() {},
    update: function() {},
    renderClip: function() {},
    renderNoClip: function() {},
    addUser: function(a) {},
    prioritySort: function(a,b) {},
    removeUser: function(a,b) {},
    createUser: function(a) {},
    updateUser: function(a) {},
    sortZIndex: function() {},
    loadAvatar: function(a,b) {},
    onAvatarLoaded: function(a,b,c) {},
    loadHitArea: function(a,b) {},
    onHitAreaLoaded: function(a,b,c) {},
    lightsOut: function(a) {},
    strobeMode: function(a) {},
    strobeSwap: function() {},
    drawGrid: function() {},
    getCellAlpha: function(a,b) {},
    getCellColor: function(a,b) {}
}),
DJBooth = Class.extend({
    init: function() {},
    onMouseMove: function(a) {},
    onMouseLeave: function() {},
    clear: function() {},
    setData: function(a) {},
    createUser: function(a,b) {},
    updateUser: function(a) {},
    loadAvatar: function(a,b) {},
    onAvatarLoaded: function(a,b,c) {},
    refresh: function() {},
    draw: function() {},
    update: function() {},
    setRenderMode: function(a) {},
    renderClip: function() {},
    renderNoClip: function() {}
}),
SearchView = Class.extend({
    init: function() {},
    onKeyUp: function(a,b) {},
    onFilterKeyUp: function(a,b) {},
    clearInputs: function() {},
    onClearSearchClick: function() {},
    onClearFilterClick: function() {},
    onSubmitSearch: function(a,b) {},
    onYouTubeClick: function() {},
    onSoundCloudClick: function() {},
    onSearchPlaylistsClick: function() {},
    onPlaylistImportClick: function() {},
    onPlaylistHelpClick: function() {},
    onSoundCloudImportClick: function() {},
    onYouTubeImportClick: function() {},
    updateSearchPlaceholder: function() {},
    onSuggestTimeout: function() {},
    onSuggestUpdate: function(a) {},
    onSuggestionClick: function(a) {},
    onSuggestionOver: function(a) {},
    onSuggestionOut: function(a) {},
    onDocumentClick: function() {},
    hideSuggestions: function() {},
    onSearchFocus: function() {},
    onFilterFocus: function() {},
    onSearchBlur: function() {},
    onFilterBlur: function() {},
    onTTImportClick: function(a) {}
}),
ChatView = Class.extend({
    init: function() {},
    ready: function() {},
    onChatSoundUpdate: function(a) {},
    onChatClear: function() {},
    onChatFocus: function() {},
    onChatBlur: function() {},
    onKeyPress: function(a,b) {},
    onKeyUp: function(a,b) {},
    onChatReceived: function(a) {},
    playSound: function(a) {},
    onTimestampUpdate: function(a) {},
    onChatDelete: function(a) {},
    onFromClick: function(a) {},
    onShowChatUser: function(a,b) {},
    getExternalUser: function(a,b,c) {},
    onChatOver: function(a) {},
    onChatOut: function(a) {},
    onDeleteChatClick: function(a) {},
    onChatSoundClick: function() {},
    onChatExpandClick: function() {},
    onChatCollapseClick: function() {},
    expand: function() {},
    collapse: function() {},
    onChatPopoutClick: function() {},
    hide: function() {},
    closePopout: function() {},
    getMentionRange: function() {},
    getCaratPosition: function() {},
    updateSuggestions: function() {},
    onSuggestionPress: function(a) {},
    onRefocusInput: function() {},
    onSuggestionOver: function(a) {},
    submitSuggestion: function() {},
    updateSelectedSuggestion: function() {},
    showChatMentions: function() {},
    onDocumentClick: function() {},
    hideSuggestions: function() {}
});
var Main, Slug, Playback, Chat, Room, RoomUser, TransactionManager, Utils, Models, MediaOverlay, UserListOverlay, AvatarOverlay, Avatars, Dialog, PopMenu, Search, rpcGW, DB, LS, Lobby, API, SocketListener, SC, WML, Popout, isiOS = navigator.userAgent.match(/(iPad|iPhone|iPod)/i) ? !0 : !1,
isAndroid = -1 < navigator.userAgent.indexOf("android"),
EXT = EXT || {}, MainView = Class.extend({
    init: function() {},
    ready: function() {},
    onWindowResize: function(a) {},
    drawSocialButtons: function() {}
});

function log(a) {}
function onDocumentReady() {}
function uiLockout() {}